{"version":3,"file":"index.mjs","sources":["../node_modules/crossfilter2/crossfilter.js","../src/index.mjs"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.crossfilter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = require(\"./src/crossfilter\").crossfilter;\n\n},{\"./src/crossfilter\":6}],2:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * This method is like `_.get` except that if the resolved value is a\n * function it's invoked with the `this` binding of its parent object and\n * its result is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to resolve.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n *\n * _.result(object, 'a[0].b.c1');\n * // => 3\n *\n * _.result(object, 'a[0].b.c2');\n * // => 4\n *\n * _.result(object, 'a[0].b.c3', 'default');\n * // => 'default'\n *\n * _.result(object, 'a[0].b.c3', _.constant('default'));\n * // => 'default'\n */\nfunction result(object, path, defaultValue) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length;\n\n  // Ensure the loop is entered when path is empty.\n  if (!length) {\n    object = undefined;\n    length = 1;\n  }\n  while (++index < length) {\n    var value = object == null ? undefined : object[toKey(path[index])];\n    if (value === undefined) {\n      index = length;\n      value = defaultValue;\n    }\n    object = isFunction(value) ? value.call(object) : value;\n  }\n  return object;\n}\n\nmodule.exports = result;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(require,module,exports){\nmodule.exports={\"version\":\"1.4.3\"}\n},{}],4:[function(require,module,exports){\nif (typeof Uint8Array !== \"undefined\") {\n  var crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  var crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  var crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  var crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  var crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\n\n// An arbitrarily-wide array of bitmasks\nfunction crossfilter_bitarray(n) {\n  this.length = n;\n  this.subarrays = 1;\n  this.width = 8;\n  this.masks = {\n    0: 0\n  }\n\n  this[0] = crossfilter_array8(n);\n}\n\ncrossfilter_bitarray.prototype.lengthen = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    this[i] = crossfilter_arrayLengthen(this[i], n);\n  }\n  this.length = n;\n};\n\n// Reserve a new bit index in the array, returns {offset, one}\ncrossfilter_bitarray.prototype.add = function() {\n  var m, w, one, i, len;\n\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    m = this.masks[i];\n    w = this.width - (32 * i);\n    one = ~m & -~m;\n\n    if (w >= 32 && !one) {\n      continue;\n    }\n\n    if (w < 32 && (one & (1 << w))) {\n      // widen this subarray\n      this[i] = crossfilter_arrayWiden(this[i], w <<= 1);\n      this.width = 32 * i + w;\n    }\n\n    this.masks[i] |= one;\n\n    return {\n      offset: i,\n      one: one\n    };\n  }\n\n  // add a new subarray\n  this[this.subarrays] = crossfilter_array8(this.length);\n  this.masks[this.subarrays] = 1;\n  this.width += 8;\n  return {\n    offset: this.subarrays++,\n    one: 1\n  };\n};\n\n// Copy record from index src to index dest\ncrossfilter_bitarray.prototype.copy = function(dest, src) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    this[i][dest] = this[i][src];\n  }\n};\n\n// Truncate the array to the given length\ncrossfilter_bitarray.prototype.truncate = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    for (var j = this.length - 1; j >= n; j--) {\n      this[i][j] = 0;\n    }\n    this[i].length = n;\n  }\n  this.length = n;\n};\n\n// Checks that all bits for the given index are 0\ncrossfilter_bitarray.prototype.zero = function(n) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that all bits for the given index are 0 except for possibly one\ncrossfilter_bitarray.prototype.zeroExcept = function(n, offset, zero) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (i === offset ? this[i][n] & zero : this[i][n]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that all bits for the given indez are 0 except for the specified mask.\n// The mask should be an array of the same size as the filter subarrays width.\ncrossfilter_bitarray.prototype.zeroExceptMask = function(n, mask) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n] & mask[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks that only the specified bit is set for the given index\ncrossfilter_bitarray.prototype.only = function(n, offset, one) {\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    if (this[i][n] != (i === offset ? one : 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks that only the specified bit is set for the given index except for possibly one other\ncrossfilter_bitarray.prototype.onlyExcept = function(n, offset, zero, onlyOffset, onlyOne) {\n  var mask;\n  var i, len;\n  for (i = 0, len = this.subarrays; i < len; ++i) {\n    mask = this[i][n];\n    if (i === offset)\n      mask &= zero;\n    if (mask != (i === onlyOffset ? onlyOne : 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmodule.exports = {\n  array8: crossfilter_arrayUntyped,\n  array16: crossfilter_arrayUntyped,\n  array32: crossfilter_arrayUntyped,\n  arrayLengthen: crossfilter_arrayLengthenUntyped,\n  arrayWiden: crossfilter_arrayWidenUntyped,\n  bitarray: crossfilter_bitarray\n};\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\n\nmodule.exports = bisect_by(crossfilter_identity);\nmodule.exports.by = bisect_by; // assign the raw function to the export as well\n\n},{\"./identity\":10}],6:[function(require,module,exports){\n'use strict';\n\nvar xfilterArray = require('./array');\nvar xfilterFilter = require('./filter');\nvar crossfilter_identity = require('./identity');\nvar crossfilter_null = require('./null');\nvar crossfilter_zero = require('./zero');\nvar xfilterHeapselect = require('./heapselect');\nvar xfilterHeap = require('./heap');\nvar bisect = require('./bisect');\nvar insertionsort = require('./insertionsort');\nvar permute = require('./permute');\nvar quicksort = require('./quicksort');\nvar xfilterReduce = require('./reduce');\nvar packageJson = require('./../package.json'); // require own package.json for the version field\nvar result = require('lodash.result');\n\n// constants\nvar REMOVED_INDEX = -1;\n\n// expose API exports\nexports.crossfilter = crossfilter;\nexports.crossfilter.heap = xfilterHeap;\nexports.crossfilter.heapselect = xfilterHeapselect;\nexports.crossfilter.bisect = bisect;\nexports.crossfilter.insertionsort = insertionsort;\nexports.crossfilter.permute = permute;\nexports.crossfilter.quicksort = quicksort;\nexports.crossfilter.version = packageJson.version; // please note use of \"package-json-versionify\" transform\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size,\n    all: all,\n    allFiltered: allFiltered,\n    onChange: onChange,\n    isElementFiltered: isElementFiltered\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      filters, // 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = [], // when data is removed\n      callbacks = [];\n\n  filters = new xfilterArray.bitarray(0);\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters.lengthen(n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n      triggerOnChange('dataAdded');\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters, or if a predicate function is passed,\n  // removes all records matching the predicate (ignoring filters).\n  function removeData(predicate) {\n    var // Mapping from old record indexes to new indexes (after records removed)\n        newIndex = crossfilter_index(n, n),\n        removed = [],\n        usePred = typeof predicate === 'function',\n        shouldRemove = function (i) {\n          return usePred ? predicate(data[i], i) : filters.zero(i)\n        };\n\n    for (var index1 = 0, index2 = 0; index1 < n; ++index1) {\n      if ( shouldRemove(index1) ) {\n        removed.push(index1);\n        newIndex[index1] = REMOVED_INDEX;\n      } else {\n        newIndex[index1] = index2++;\n      }\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(-1, -1, [], removed, true); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var index3 = 0, index4 = 0; index3 < n; ++index3) {\n      if ( newIndex[index3] !== REMOVED_INDEX ) {\n        if (index3 !== index4) filters.copy(index4, index3), data[index4] = data[index3];\n        ++index4;\n      }\n    }\n\n    data.length = n = index4;\n    filters.truncate(index4);\n    triggerOnChange('dataRemoved');\n  }\n\n  // Return true if the data element at index i is filtered IN.\n  // Optionally, ignore the filters of any dimensions in the ignore_dimensions list.\n  function isElementFiltered(i, ignore_dimensions) {\n    var n,\n        d,\n        id,\n        len,\n        mask = Array(filters.subarrays);\n    for (n = 0; n < filters.subarrays; n++) { mask[n] = ~0; }\n    if (ignore_dimensions) {\n      for (d = 0, len = ignore_dimensions.length; d < len; d++) {\n        // The top bits of the ID are the subarray offset and the lower bits are the bit\n        // offset of the \"one\" mask.\n        id = ignore_dimensions[d].id();\n        mask[id >> 7] &= ~(0x1 << (id & 0x3f));\n      }\n    }\n    return filters.zeroExceptMask(i,mask);\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value, iterable) {\n\n    if (typeof value === 'string') {\n      var accessorPath = value;\n      value = function(d) { return result(d, accessorPath); };\n    }\n\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose, // for backwards-compatibility\n      accessor: value,\n      id: function() { return id; }\n    };\n\n    var one, // lowest unset bit as mask, e.g., 00001000\n        zero, // inverted one, e.g., 11110111\n        offset, // offset into the filters arrays\n        id, // unique ID for this dimension (reused when dimensions are disposed)\n        values, // sorted, cached array\n        index, // maps sorted value index -> record index (in data)\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        iterablesIndexCount,\n        newIterablesIndexCount,\n        iterablesIndexFilterStatus,\n        newIterablesIndexFilterStatus,\n        iterablesEmptyRows = [],\n        sort = quicksort.by(function(i) { return newValues[i]; }),\n        refilter = xfilterFilter.filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0,\n        t = 0,\n        k;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Add a new dimension in the filter bitmap and store the offset and bitmask.\n    var tmp = filters.add();\n    offset = tmp.offset;\n    one = tmp.one;\n    zero = ~one;\n\n    // Create a unique ID for the dimension\n    // IDs will be re-used if dimensions are disposed.\n    // For internal use the ID is the subarray offset shifted left 7 bits or'd with the\n    // bit offset of the set bit in the dimension's \"one\" mask.\n    id = (offset << 7) | (Math.log(one) / Math.log(2));\n\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      if (iterable){\n        // Count all the values\n        t = 0;\n        j = 0;\n        k = [];\n\n        for (var i0 = 0; i0 < newData.length; i0++) {\n          for(j = 0, k = value(newData[i0]); j < k.length; j++) {\n            t++;\n          }\n        }\n\n        newValues = [];\n        newIterablesIndexCount = crossfilter_range(newData.length);\n        newIterablesIndexFilterStatus = crossfilter_index(t,1);\n        var unsortedIndex = crossfilter_range(t);\n\n        for (var l = 0, index1 = 0; index1 < newData.length; index1++) {\n          k = value(newData[index1])\n          //\n          if(!k.length){\n            newIterablesIndexCount[index1] = 0;\n            iterablesEmptyRows.push(index1 + n0);\n            continue;\n          }\n          newIterablesIndexCount[index1] = k.length\n          for (j = 0; j < k.length; j++) {\n            newValues.push(k[j]);\n            unsortedIndex[l] = index1;\n            l++;\n          }\n        }\n\n        // Create the Sort map used to sort both the values and the valueToData indices\n        var sortMap = sort(crossfilter_range(t), 0, t);\n\n        // Use the sortMap to sort the newValues\n        newValues = permute(newValues, sortMap);\n\n\n        // Use the sortMap to sort the unsortedIndex map\n        // newIndex should be a map of sortedValue -> crossfilterData\n        newIndex = permute(unsortedIndex, sortMap)\n\n      } else{\n        // Permute new values into natural order using a standard sorted index.\n        newValues = newData.map(value);\n        newIndex = sort(crossfilter_range(n1), 0, n1);\n        newValues = permute(newValues, newIndex);\n      }\n\n      if(iterable) {\n        n1 = t;\n      }\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1];\n      if (refilterFunction) {\n        for (var index2 = 0; index2 < n1; ++index2) {\n          if (!refilterFunction(newValues[index2], index2)) {\n            filters[offset][newIndex[index2] + n0] |= one;\n            if(iterable) newIterablesIndexFilterStatus[index2] = 1;\n          }\n        }\n      } else {\n        for (var index3 = 0; index3 < lo1; ++index3) {\n          filters[offset][newIndex[index3] + n0] |= one;\n          if(iterable) newIterablesIndexFilterStatus[index3] = 1;\n        }\n        for (var index4 = hi1; index4 < n1; ++index4) {\n          filters[offset][newIndex[index4] + n0] |= one;\n          if(iterable) newIterablesIndexFilterStatus[index4] = 1;\n        }\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        iterablesIndexCount = newIterablesIndexCount;\n        iterablesIndexFilterStatus = newIterablesIndexFilterStatus;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n\n\n      var oldValues = values,\n        oldIndex = index,\n        oldIterablesIndexFilterStatus = iterablesIndexFilterStatus,\n        old_n0,\n        i1 = 0;\n\n      i0 = 0;\n\n      if(iterable){\n        old_n0 = n0\n        n0 = oldValues.length;\n        n1 = t\n      }\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = iterable ? new Array(n0 + n1) : new Array(n);\n      index = iterable ? new Array(n0 + n1) : crossfilter_index(n, n);\n      if(iterable) iterablesIndexFilterStatus = crossfilter_index(n0 + n1, 1);\n\n      // Concatenate the newIterablesIndexCount onto the old one.\n      if(iterable) {\n        var oldiiclength = iterablesIndexCount.length;\n        iterablesIndexCount = xfilterArray.arrayLengthen(iterablesIndexCount, n);\n        for(var j=0; j+oldiiclength < n; j++) {\n          iterablesIndexCount[j+oldiiclength] = newIterablesIndexCount[j];\n        }\n      }\n\n      // Merge the old and new sorted values, and old and new index.\n      var index5 = 0;\n      for (; i0 < n0 && i1 < n1; ++index5) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[index5] = oldValues[i0];\n          if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];\n          index[index5] = oldIndex[i0++];\n        } else {\n          values[index5] = newValues[i1];\n          if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];\n          index[index5] = newIndex[i1++] + (iterable ? old_n0 : n0);\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++index5) {\n        values[index5] = oldValues[i0];\n        if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];\n        index[index5] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++index5) {\n        values[index5] = newValues[i1];\n        if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];\n        index[index5] = newIndex[i1] + (iterable ? old_n0 : n0);\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      if (iterable) {\n        for (var i0 = 0, i1 = 0; i0 < iterablesEmptyRows.length; i0++) {\n          if (reIndex[iterablesEmptyRows[i0]] !== REMOVED_INDEX) {\n            iterablesEmptyRows[i1] = reIndex[iterablesEmptyRows[i0]];\n            i1++;\n          }\n        }\n        iterablesEmptyRows.length = i1;\n        for (i0 = 0, i1 = 0; i0 < n; i0++) {\n          if (reIndex[i0] !== REMOVED_INDEX) {\n            if (i1 !== i0) iterablesIndexCount[i1] = iterablesIndexCount[i0];\n            i1++;\n          }\n        }\n        iterablesIndexCount.length = i1;\n      }\n      // Rewrite our index, overwriting removed values\n      var n0 = values.length;\n      for (var i = 0, j = 0, oldDataIndex; i < n0; ++i) {\n        oldDataIndex = index[i];\n        if (reIndex[oldDataIndex] !== REMOVED_INDEX) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[oldDataIndex];\n          if (iterable) {\n            iterablesIndexFilterStatus[j] = iterablesIndexFilterStatus[i];\n          }\n          ++j;\n        }\n      }\n      values.length = j;\n      if (iterable) iterablesIndexFilterStatus.length = j;\n      while (j < n0) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; }, bounds[0] === 0 && bounds[1] === values.length);\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [],\n          valueIndexAdded = [],\n          valueIndexRemoved = [];\n\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          added.push(index[i]);\n          valueIndexAdded.push(i);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          removed.push(index[i]);\n          valueIndexRemoved.push(i);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          added.push(index[i]);\n          valueIndexAdded.push(i);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          removed.push(index[i]);\n          valueIndexRemoved.push(i);\n        }\n      }\n\n      if(!iterable) {\n        // Flip filters normally.\n\n        for(i=0; i<added.length; i++) {\n          filters[offset][added[i]] ^= one;\n        }\n\n        for(i=0; i<removed.length; i++) {\n          filters[offset][removed[i]] ^= one;\n        }\n\n      } else {\n        // For iterables, we need to figure out if the row has been completely removed vs partially included\n        // Only count a row as added if it is not already being aggregated. Only count a row\n        // as removed if the last element being aggregated is removed.\n\n        var newAdded = [];\n        var newRemoved = [];\n        for (i = 0; i < added.length; i++) {\n          iterablesIndexCount[added[i]]++\n          iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;\n          if(iterablesIndexCount[added[i]] === 1) {\n            filters[offset][added[i]] ^= one;\n            newAdded.push(added[i]);\n          }\n        }\n        for (i = 0; i < removed.length; i++) {\n          iterablesIndexCount[removed[i]]--\n          iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;\n          if(iterablesIndexCount[removed[i]] === 0) {\n            filters[offset][removed[i]] ^= one;\n            newRemoved.push(removed[i]);\n          }\n        }\n\n        added = newAdded;\n        removed = newRemoved;\n\n        // Now handle empty rows.\n        if(bounds[0] === 0 && bounds[1] === values.length) {\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was not in the filter, so set the filter and add\n              filters[offset][k] ^= one;\n              added.push(k);\n            }\n          }\n        } else {\n          // filter in place - remove empty rows if necessary\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was in the filter, so set the filter and remove\n              filters[offset][k] ^= one;\n              removed.push(k);\n            }\n          }\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, offset, added, removed); });\n      triggerOnChange('filtered');\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      return filterIndexBounds((refilter = xfilterFilter.filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      return filterIndexBounds((refilter = xfilterFilter.filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      return filterIndexBounds((refilter = xfilterFilter.filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      refilterFunction = f;\n      refilter = xfilterFilter.filterAll;\n\n      filterIndexFunction(f, false);\n\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f, filterAll) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [],\n          valueIndexAdded = [],\n          valueIndexRemoved = [],\n          indexLength = values.length;\n\n      if(!iterable) {\n        for (i = 0; i < indexLength; ++i) {\n          if (!(filters[offset][k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n            if (x) added.push(k);\n            else removed.push(k);\n          }\n        }\n      }\n\n      if(iterable) {\n        for(i=0; i < indexLength; ++i) {\n          if(f(values[i], i)) {\n            added.push(index[i]);\n            valueIndexAdded.push(i);\n          } else {\n            removed.push(index[i]);\n            valueIndexRemoved.push(i);\n          }\n        }\n      }\n\n      if(!iterable) {\n        for(i=0; i<added.length; i++) {\n          if(filters[offset][added[i]] & one) filters[offset][added[i]] &= zero;\n        }\n\n        for(i=0; i<removed.length; i++) {\n          if(!(filters[offset][removed[i]] & one)) filters[offset][removed[i]] |= one;\n        }\n      } else {\n\n        var newAdded = [];\n        var newRemoved = [];\n        for (i = 0; i < added.length; i++) {\n          // First check this particular value needs to be added\n          if(iterablesIndexFilterStatus[valueIndexAdded[i]] === 1) {\n            iterablesIndexCount[added[i]]++\n            iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;\n            if(iterablesIndexCount[added[i]] === 1) {\n              filters[offset][added[i]] ^= one;\n              newAdded.push(added[i]);\n            }\n          }\n        }\n        for (i = 0; i < removed.length; i++) {\n          // First check this particular value needs to be removed\n          if(iterablesIndexFilterStatus[valueIndexRemoved[i]] === 0) {\n            iterablesIndexCount[removed[i]]--\n            iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;\n            if(iterablesIndexCount[removed[i]] === 0) {\n              filters[offset][removed[i]] ^= one;\n              newRemoved.push(removed[i]);\n            }\n          }\n        }\n\n        added = newAdded;\n        removed = newRemoved;\n\n        // Now handle empty rows.\n        if(filterAll) {\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was not in the filter, so set the filter and add\n              filters[offset][k] ^= one;\n              added.push(k);\n            }\n          }\n        } else {\n          // filter in place - remove empty rows if necessary\n          for(i = 0; i < iterablesEmptyRows.length; i++) {\n            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {\n              // Was in the filter, so set the filter and remove\n              filters[offset][k] ^= one;\n              removed.push(k);\n            }\n          }\n        }\n      }\n\n      filterListeners.forEach(function(l) { l(one, offset, added, removed); });\n      triggerOnChange('filtered');\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k, top_offset) {\n      var array = [],\n          i = hi0,\n          j,\n          toSkip = 0;\n\n      if(top_offset && top_offset > 0) toSkip = top_offset;\n\n      while (--i >= lo0 && k > 0) {\n        if (filters.zero(j = index[i])) {\n          if(toSkip > 0) {\n            //skip matching row\n            --toSkip;\n          } else {\n            array.push(data[j]);\n            --k;\n          }\n        }\n      }\n\n      if(iterable){\n        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {\n          // Add row with empty iterable column at the end\n          if(filters.zero(j = iterablesEmptyRows[i])) {\n            if(toSkip > 0) {\n              //skip matching row\n              --toSkip;\n            } else {\n              array.push(data[j]);\n              --k;\n            }\n          }\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k, bottom_offset) {\n      var array = [],\n          i,\n          j,\n          toSkip = 0;\n\n      if(bottom_offset && bottom_offset > 0) toSkip = bottom_offset;\n\n      if(iterable) {\n        // Add row with empty iterable column at the top\n        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {\n          if(filters.zero(j = iterablesEmptyRows[i])) {\n            if(toSkip > 0) {\n              //skip matching row\n              --toSkip;\n            } else {\n              array.push(data[j]);\n              --k;\n            }\n          }\n        }\n      }\n\n      i = lo0;\n\n      while (i < hi0 && k > 0) {\n        if (filters.zero(j = index[i])) {\n          if(toSkip > 0) {\n            //skip matching row\n            --toSkip;\n          } else {\n            array.push(data[j]);\n            --k;\n          }\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null,\n          n0old;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n\n        if(iterable) {\n          n0old = n0\n          n0 = values.length - newValues.length\n          n1 = newValues.length;\n        }\n\n        var oldGroups = groups,\n            reIndex = iterable ? [] : crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            remove = reduceRemove,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n        if (resetNeeded) remove = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        if(iterable){\n          groupIndex = k0 ? groupIndex : [];\n        }\n        else{\n          groupIndex = k0 > 1 ? xfilterArray.arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n        }\n\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            g0 = oldGroups[++i0];\n            if (g0) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n\n          while (x1 <= x) {\n            j = newIndex[i1] + (iterable ? n0old : n0)\n\n\n            if(iterable){\n              if(groupIndex[j]){\n                groupIndex[j].push(k)\n              }\n              else{\n                groupIndex[j] = [k]\n              }\n            }\n            else{\n              groupIndex[j] = k;\n            }\n\n            // Always add new values to groups. Only remove when not in filter.\n            // This gives groups full information on data life-cycle.\n            g.value = add(g.value, data[j], true);\n            if (!filters.zeroExcept(j, offset, zero)) g.value = remove(g.value, data[j], false);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater th1an all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n\n        // Fill in gaps with empty arrays where there may have been rows with empty iterables\n        if(iterable){\n          for (var index1 = 0; index1 < n; index1++) {\n            if(!groupIndex[index1]){\n              groupIndex[index1] = [];\n            }\n          }\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if(k > i0){\n          if(iterable){\n            for (i0 = 0; i0 < n0old; ++i0) {\n              for (index1 = 0; index1 < groupIndex[i0].length; index1++) {\n                groupIndex[i0][index1] = reIndex[groupIndex[i0][index1]];\n              }\n            }\n          }\n          else{\n            for (i0 = 0; i0 < n0; ++i0) {\n              groupIndex[i0] = reIndex[groupIndex[i0]];\n            }\n          }\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1 || iterable) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if(iterable){\n            k++\n            return\n          }\n          if (++k === groupCapacity) {\n            reIndex = xfilterArray.arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = xfilterArray.arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData(reIndex) {\n        if (k > 1 || iterable) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK),\n              i,\n              i0,\n              j;\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          if (!iterable) {\n            for (i = 0, j = 0; i < n; ++i) {\n              if (reIndex[i] !== REMOVED_INDEX) {\n                seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n                ++j;\n              }\n            }\n          } else {\n            for (i = 0, j = 0; i < n; ++i) {\n              if (reIndex[i] !== REMOVED_INDEX) {\n                groupIndex[j] = groupIndex[i];\n                for (i0 = 0; i0 < groupIndex[j].length; i0++) {\n                  seenGroups[groupIndex[j][i0]] = 1;\n                }\n                ++j;\n              }\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1 || iterable) {\n            // Reindex the group index using seenGroups to find the new index.\n            if (!iterable) {\n              for (i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n            } else {\n              for (i = 0; i < j; ++i) {\n                for (i0 = 0; i0 < groupIndex[i].length; ++i0) {\n                  groupIndex[i][i0] = seenGroups[groupIndex[i][i0]];\n                }\n              }\n            }\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1 || iterable\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var index3 = 0; index3 < n; ++index3) if (reIndex[index3] !== REMOVED_INDEX) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      // notFilter indicates a crossfilter.add/remove operation.\n      function updateMany(filterOne, filterOffset, added, removed, notFilter) {\n\n        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;\n\n        var i,\n            j,\n            k,\n            n,\n            g;\n\n        if(iterable){\n          // Add the added values.\n          for (i = 0, n = added.length; i < n; ++i) {\n            if (filters.zeroExcept(k = added[i], offset, zero)) {\n              for (j = 0; j < groupIndex[k].length; j++) {\n                g = groups[groupIndex[k][j]];\n                g.value = reduceAdd(g.value, data[k], false, j);\n              }\n            }\n          }\n\n          // Remove the removed values.\n          for (i = 0, n = removed.length; i < n; ++i) {\n            if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n              for (j = 0; j < groupIndex[k].length; j++) {\n                g = groups[groupIndex[k][j]];\n                g.value = reduceRemove(g.value, data[k], notFilter, j);\n              }\n            }\n          }\n          return;\n        }\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (filters.zeroExcept(k = added[i], offset, zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k], false);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k], notFilter);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      // notFilter indicates a crossfilter.add/remove operation.\n      function updateOne(filterOne, filterOffset, added, removed, notFilter) {\n        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (filters.zeroExcept(k = added[i], offset, zero)) {\n            g.value = reduceAdd(g.value, data[k], false);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {\n            g.value = reduceRemove(g.value, data[k], notFilter);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            j,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // We add all records and then remove filtered records so that reducers\n        // can build an 'unfiltered' view even if there are already filters in\n        // place on other dimensions.\n        if(iterable){\n          for (i = 0; i < n; ++i) {\n            for (j = 0; j < groupIndex[i].length; j++) {\n              g = groups[groupIndex[i][j]];\n              g.value = reduceAdd(g.value, data[i], true, j);\n            }\n          }\n          for (i = 0; i < n; ++i) {\n            if (!filters.zeroExcept(i, offset, zero)) {\n              for (j = 0; j < groupIndex[i].length; j++) {\n                g = groups[groupIndex[i][j]];\n                g.value = reduceRemove(g.value, data[i], false, j);\n              }\n            }\n          }\n          return;\n        }\n\n        for (i = 0; i < n; ++i) {\n          g = groups[groupIndex[i]];\n          g.value = reduceAdd(g.value, data[i], true);\n        }\n        for (i = 0; i < n; ++i) {\n          if (!filters.zeroExcept(i, offset, zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceRemove(g.value, data[i], false);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // We add all records and then remove filtered records so that reducers\n        // can build an 'unfiltered' view even if there are already filters in\n        // place on other dimensions.\n        for (i = 0; i < n; ++i) {\n          g.value = reduceAdd(g.value, data[i], true);\n        }\n\n        for (i = 0; i < n; ++i) {\n          if (!filters.zeroExcept(i, offset, zero)) {\n            g.value = reduceRemove(g.value, data[i], false);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = xfilterHeapselect.by(valueOf);\n        heap = xfilterHeap.by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      filters.masks[offset] &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Cycle through all the values.\n      for (i = n0; i < n; ++i) {\n\n        // Add all values all the time.\n        reduceValue = reduceAdd(reduceValue, data[i], true);\n\n        // Remove the value if filtered.\n        if (!filters.zero(i)) {\n          reduceValue = reduceRemove(reduceValue, data[i], false);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, filterOffset, added, removed, notFilter) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (filters.zero(k = added[i])) {\n          reduceValue = reduceAdd(reduceValue, data[k], notFilter);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters.only(k = removed[i], filterOffset, filterOne)) {\n          reduceValue = reduceRemove(reduceValue, data[k], notFilter);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      // Cycle through all the values.\n      for (i = 0; i < n; ++i) {\n\n        // Add all values all the time.\n        reduceValue = reduceAdd(reduceValue, data[i], true);\n\n        // Remove the value if it is filtered.\n        if (!filters.zero(i)) {\n          reduceValue = reduceRemove(reduceValue, data[i], false);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i, 1);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i, 1);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  // Returns the raw row data contained in this crossfilter\n  function all(){\n    return data;\n  }\n\n  // Returns row data with all dimension filters applied\n  function allFiltered() {\n    var array = [],\n        i = 0;\n\n      for (i = 0; i < n; i++) {\n        if (filters.zero(i)) {\n          array.push(data[i]);\n        }\n      }\n\n      return array;\n  }\n\n  function onChange(cb){\n    if(typeof cb !== 'function'){\n      /* eslint no-console: 0 */\n      console.warn('onChange callback parameter must be a function!');\n      return;\n    }\n    callbacks.push(cb);\n    return function(){\n      callbacks.splice(callbacks.indexOf(cb), 1);\n    };\n  }\n\n  function triggerOnChange(eventName){\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i](eventName);\n    }\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? xfilterArray.array8 : m < 0x10001\n      ? xfilterArray.array16\n      : xfilterArray.array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n\n},{\"./../package.json\":3,\"./array\":4,\"./bisect\":5,\"./filter\":7,\"./heap\":8,\"./heapselect\":9,\"./identity\":10,\"./insertionsort\":11,\"./null\":12,\"./permute\":13,\"./quicksort\":14,\"./reduce\":15,\"./zero\":16,\"lodash.result\":2}],7:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\n\nmodule.exports = {\n  filterExact: crossfilter_filterExact,\n  filterRange: crossfilter_filterRange,\n  filterAll: crossfilter_filterAll\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\n\nmodule.exports = heap_by(crossfilter_identity);\nmodule.exports.by = heap_by;\n\n},{\"./identity\":10}],9:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\nvar xFilterHeap = require('./heap');\n\nfunction heapselect_by(f) {\n  var heap = xFilterHeap.by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\n\nmodule.exports = heapselect_by(crossfilter_identity);\nmodule.exports.by = heapselect_by; // assign the raw function to the export as well\n\n},{\"./heap\":8,\"./identity\":10}],10:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_identity(d) {\n  return d;\n}\n\nmodule.exports = crossfilter_identity;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nvar crossfilter_identity = require('./identity');\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n\nmodule.exports = insertionsort_by(crossfilter_identity);\nmodule.exports.by = insertionsort_by;\n\n},{\"./identity\":10}],12:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_null() {\n  return null;\n}\n\nmodule.exports = crossfilter_null;\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nfunction permute(array, index, deep) {\n  for (var i = 0, n = index.length, copy = deep ? JSON.parse(JSON.stringify(array)) : new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\n\nmodule.exports = permute;\n\n},{}],14:[function(require,module,exports){\nvar crossfilter_identity = require('./identity');\nvar xFilterInsertionsort = require('./insertionsort');\n\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see NOTICE and AUTHORS for details.\n\nfunction quicksort_by(f) {\n  var insertionsort = xFilterInsertionsort.by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          /* eslint no-constant-condition: 0 */\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      (function () { // isolate scope\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      })(); // isolate scope\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n\n      (function () { // isolate scope\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            /* eslint no-constant-condition: 0 */\n            while (true) {\n              greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      })(); // isolate scope\n\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\n\nmodule.exports = quicksort_by(crossfilter_identity);\nmodule.exports.by = quicksort_by;\n\n},{\"./identity\":10,\"./insertionsort\":11}],15:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\n\nmodule.exports = {\n  reduceIncrement: crossfilter_reduceIncrement,\n  reduceDecrement: crossfilter_reduceDecrement,\n  reduceAdd: crossfilter_reduceAdd,\n  reduceSubtract: crossfilter_reduceSubtract\n};\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\nfunction crossfilter_zero() {\n  return 0;\n}\n\nmodule.exports = crossfilter_zero;\n\n},{}]},{},[1])(1)\n});","import crossfilter from 'crossfilter2/crossfilter'\n\nconst FILTER_METHODS = [\n  'filter',\n  'filterAll',\n  'filterExact',\n  'filterRange',\n  'filterFunction'\n]\n\nexport class Manager {\n  constructor() {\n    this._cf = {}\n    this._commonDimensions = {}\n    this._dimensions = {\n      default: {}\n    }\n  }\n\n  // interfaces\n\n  registerDataset(data, options={}) {\n    const {\n      dataset = 'default'\n    } = options\n    this._cf[dataset] = crossfilter(data)\n    return this._cf[dataset]\n  }\n\n  registerDimension(name, method, options={}) {\n    const {\n      dataset = 'default',\n      common = false\n    } = options\n\n    const cf = this.dataset(dataset)\n\n    if (!cf) {\n      return null\n    }\n\n    let dim = this.dimension(name, options)\n\n    if (dim) return dim\n\n    if (common) {\n      dim = this.buildCommonDimension(name, cf, method)\n      if (!this._commonDimensions[name]) this._commonDimensions[name] = {}\n      this._commonDimensions[name][dataset] = dim\n    }\n    else {\n      dim = cf.dimension(method)\n      if (!this._dimensions[dataset]) this._dimensions[dataset] = {}\n      this._dimensions[dataset][name] = dim\n    }\n\n    return dim\n  }\n\n  dataset(dataset='default') {\n    return this._cf[dataset]\n  }\n\n  dimension(name, options={}) {\n    const {\n      dataset = 'default',\n      common = false\n    } = options\n\n    if (common) {\n      if (this._commonDimensions[name]) {\n        return this._commonDimensions[name][dataset]\n      }\n    }\n    else {\n      if (this._dimensions[dataset]) {\n        return this._dimensions[dataset][name]\n      }\n    }\n    return null\n  }\n\n  filterAll() {\n    // dimension.filterAll() by each dimensions\n    Object.values(this._dimensions).forEach((ds) => {\n      Object.values(ds).forEach((dim) => {\n        dim.filterAll()\n      })\n    })\n\n    if (!Object.keys(this._commonDimensions).length) return;\n\n    Object.values(this._commonDimensions).forEach((ds) => {\n      Object.values(ds).forEach((dim) => {\n        dim._filterAll()\n      })\n    })\n  }\n\n  // inner methods\n\n  filterCommonDimensions(name, method, ...args) {\n    if (!this._commonDimensions[name]) return;\n    Object.keys(this._commonDimensions[name]).forEach((k) => {\n      const dim = this._commonDimensions[name][k]\n      const _method = `_${method}`\n      dim[_method](...args)\n    })\n    return null\n  }\n\n  buildCommonDimension(name, cf, method) {\n    const dim = cf.dimension(method)\n    const self = this\n    const proxy = new Proxy(dim, {\n      get (ins, prop) {\n        if (prop[0] === '_' && FILTER_METHODS.includes(prop.slice(1))) {\n          const _prop = prop.slice(1)\n          return (...args) => ins[_prop](...args)\n        }\n        if (FILTER_METHODS.includes(prop)) {\n          return (...args) => self.filterCommonDimensions(name, prop, ...args)\n        }\n        if (ins[prop] instanceof Function || typeof ins[prop] === 'function') {\n          return (...args) => ins[prop](...args)\n        }\n        return ins[prop]\n      }\n    })\n\n    return proxy\n  }\n}\n\n"],"names":["f","e","t","n","r","s","o","u","a","require","i","Error","code","l","exports","call","length","module","crossfilter","global","FUNC_ERROR_TEXT","HASH_UNDEFINED","INFINITY","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reEscapeChar","reIsHostCtor","freeGlobal","Object","freeSelf","self","root","Function","getValue","object","key","undefined","isHostObject","value","result","toString","arrayProto","Array","prototype","funcProto","objectProto","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","replace","Symbol","splice","Map","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","index","clear","entry","set","hashClear","__data__","hashDelete","has","hashGet","data","hashHas","hashSet","get","ListCache","listCacheClear","listCacheDelete","assocIndexOf","lastIndex","pop","listCacheGet","listCacheHas","listCacheSet","push","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","array","eq","baseIsNative","isObject","isMasked","pattern","isFunction","test","toSource","baseToString","isSymbol","castPath","isArray","stringToPath","map","isKeyable","isKey","type","func","memoize","string","match","number","quote","toKey","resolver","TypeError","memoized","args","arguments","apply","cache","Cache","other","tag","isObjectLike","path","defaultValue","window","Uint8Array","crossfilter_array8","crossfilter_array16","Uint16Array","crossfilter_array32","Uint32Array","crossfilter_arrayLengthen","copy","constructor","crossfilter_arrayWiden","width","crossfilter_arrayUntyped","crossfilter_arrayLengthenUntyped","crossfilter_arrayWidenUntyped","crossfilter_bitarray","subarrays","masks","lengthen","len","add","m","w","one","dest","src","truncate","j","zero","zeroExcept","offset","zeroExceptMask","mask","only","onlyExcept","onlyOffset","onlyOne","crossfilter_identity","bisect_by","bisectLeft","x","lo","hi","mid","bisectRight","right","left","by","xfilterArray","xfilterFilter","crossfilter_null","crossfilter_zero","xfilterHeapselect","xfilterHeap","bisect","insertionsort","permute","quicksort","xfilterReduce","packageJson","REMOVED_INDEX","heap","heapselect","version","removeData","dimension","groupAll","size","all","allFiltered","onChange","isElementFiltered","bitarray","newData","n0","n1","concat","forEach","predicate","crossfilter_index","removed","usePred","shouldRemove","filters","index1","index2","newIndex","index3","index4","ignore_dimensions","d","id","iterable","accessorPath","filter","filterExact","filterRange","filterFunction","filterAll","top","bottom","group","dispose","newIterablesIndexCount","iterablesIndexFilterStatus","newIterablesIndexFilterStatus","iterablesEmptyRows","sort","newValues","refilter","lo0","hi0","k","unshift","preAdd","postAdd","tmp","Math","log","i0","crossfilter_range","unsortedIndex","sortMap","bounds","lo1","hi1","refilterFunction","oldValues","values","oldIndex","oldIterablesIndexFilterStatus","old_n0","i1","oldiiclength","iterablesIndexCount","arrayLengthen","index5","reIndex","oldDataIndex","filterIndexBounds","added","valueIndexAdded","valueIndexRemoved","min","max","newAdded","newRemoved","range","filterIndexFunction","indexLength","top_offset","toSkip","bottom_offset","reduce","reduceCount","reduceSum","order","orderNatural","groups","groupCapacity","crossfilter_capacity","groupWidth","reduceAdd","reduceRemove","reduceInitial","update","reset","resetNeeded","n0old","oldGroups","remove","initial","k0","groupIndex","x0","g0","x1","g","filterListeners","indexOf","updateMany","resetMany","updateOne","resetOne","groupIncrement","arrayWiden","oldK","seenGroups","filterOne","filterOffset","notFilter","select","reduceIncrement","reduceDecrement","reduceSubtract","valueOf","indexListeners","removeDataListeners","dataListeners","reduceValue","cb","warn","callbacks","triggerOnChange","eventName","array8","array16","array32","crossfilter_filterExact","crossfilter_filterRange","crossfilter_filterAll","heap_by","sift","child","xFilterHeap","heapselect_by","queue","insertionsort_by","deep","JSON","parse","stringify","xFilterInsertionsort","quicksort_by","quicksort_sizeThreshold","sixth","i5","i3","i4","e1","e2","i2","x2","e3","x3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","pivotsEqual","great","ek","xk","greatValue","lessValue","crossfilter_reduceIncrement","p","crossfilter_reduceDecrement","crossfilter_reduceAdd","v","crossfilter_reduceSubtract","FILTER_METHODS","Manager","_cf","_commonDimensions","_dimensions","options","dataset","name","method","common","cf","dim","buildCommonDimension","ds","_filterAll","_method","proxy","Proxy","ins","prop","includes","slice","_prop","filterCommonDimensions"],"mappings":"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"}